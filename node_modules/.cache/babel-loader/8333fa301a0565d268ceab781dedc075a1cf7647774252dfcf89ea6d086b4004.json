{"ast":null,"code":"class Api {\n  constructor({\n    baseUrl,\n    headers\n  }) {\n    this._baseUrl = baseUrl;\n    this._headers = headers;\n  }\n  getInfo(jwt) {\n    return fetch(`${this._baseUrl}/users/me`, {\n      method: \"GET\",\n      headers: {\n        \"content-type\": \"application/json\",\n        Authorization: `Bearer ${jwt}`\n      }\n    }).then(res => this._addResult(res));\n  }\n  setInfo(name, email, jwt) {\n    return fetch(`${this._baseUrl}/users/me`, {\n      method: \"PATCH\",\n      headers: {\n        \"content-type\": \"application/json\",\n        Authorization: `Bearer ${jwt}`\n      },\n      body: JSON.stringify({\n        name,\n        email\n      })\n    }).then(res => this._addResult(res));\n  }\n  register(name, email, password) {\n    return fetch(`${this._baseUrl}/signup`, {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        name,\n        email,\n        password\n      })\n    }).then(res => this._addResult(res)).catch(e => console.error(e));\n  }\n  login(email, password) {\n    return fetch(`${this._baseUrl}/signin`, {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        email,\n        password\n      })\n    }).then(res => this._addResult(res));\n  }\n  logout() {\n    return fetch(`${this._baseUrl}/signout`, {\n      method: \"POST\",\n      headers: this._headers\n    }).then(res => this._addResult(res));\n  }\n  getSavedMovies(jwt) {\n    return fetch(`${this._baseUrl}/movies`, {\n      headers: {\n        \"content-type\": \"application/json\",\n        Authorization: `Bearer ${jwt}`\n      }\n    }).then(res => this._addResult(res));\n  }\n  postMovie(movie, jwt) {\n    return fetch(`${this._baseUrl}/movies`, {\n      method: \"POST\",\n      headers: {\n        \"content-type\": \"application/json\",\n        Authorization: `Bearer ${jwt}`\n      },\n      body: JSON.stringify({\n        country: movie.country,\n        director: movie.director,\n        duration: movie.duration,\n        year: movie.year,\n        description: movie.description,\n        image: `https://api.nomoreparties.co${movie.image.url}`,\n        trailer: movie.trailerLink,\n        movieId: movie.id.toString(),\n        nameRU: movie.nameRU,\n        nameEN: movie.nameEN,\n        thumbnail: `https://api.nomoreparties.co${movie.image.url}`\n      })\n    }).then(res => this._addResult(res));\n  }\n  removeMovie(movieId, jwt) {\n    return fetch(`${this._baseUrl}/movies/${movieId}`, {\n      method: \"DELETE\",\n      headers: {\n        \"content-type\": \"application/json\",\n        Authorization: `Bearer ${jwt}`\n      }\n    }).then(res => this._addResult(res));\n  }\n  errorHandler(err) {\n    console.log(err);\n  }\n  _addResult(res) {\n    console.log('res', res);\n    if (res.ok) {\n      return res.json();\n    }\n    return Promise.reject(`Ошибка: ${res.status}`);\n  }\n}\nconst mainApi = new Api({\n  // baseUrl: \"https://api.movies-ivlev.nomoredomains.club\",\n  baseUrl: \"http://localhost:3000\",\n  // baseUrl: \"https://api.deploy-diploma.nomoreparties.co/\",\n  headers: {\n    \"Content-Type\": \"application/json\",\n    Authorization: `Bearer ${localStorage.getItem(\"jwt\")}`\n  }\n});\nexport default mainApi;","map":{"version":3,"names":["Api","constructor","baseUrl","headers","_baseUrl","_headers","getInfo","jwt","fetch","method","Authorization","then","res","_addResult","setInfo","name","email","body","JSON","stringify","register","password","catch","e","console","error","login","logout","getSavedMovies","postMovie","movie","country","director","duration","year","description","image","url","trailer","trailerLink","movieId","id","toString","nameRU","nameEN","thumbnail","removeMovie","errorHandler","err","log","ok","json","Promise","reject","status","mainApi","localStorage","getItem"],"sources":["/Users/macbook/Yandex.Disk.localized/dev/diploma/movies-explorer-frontend/src/utils/MainApi.js"],"sourcesContent":["class Api {\n    constructor({ baseUrl, headers }) {\n      this._baseUrl = baseUrl;\n      this._headers = headers;\n    }\n  \n    getInfo(jwt) {\n      return fetch(`${this._baseUrl}/users/me`, {\n        method: \"GET\",\n        headers: {\n          \"content-type\": \"application/json\",\n          Authorization: `Bearer ${jwt}`,\n        },\n      }).then((res) => this._addResult(res));\n    }\n  \n    setInfo(name, email, jwt) {\n      return fetch(`${this._baseUrl}/users/me`, {\n        method: \"PATCH\",\n        headers: {\n          \"content-type\": \"application/json\",\n          Authorization: `Bearer ${jwt}`,\n        },\n        body: JSON.stringify({\n          name,\n          email,\n        }),\n      }).then((res) => this._addResult(res));\n    }\n  \n    register(name, email, password) {\n      return fetch(`${this._baseUrl}/signup`, {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify({\n          name,\n          email,\n          password,\n        }),\n      }).then((res) => this._addResult(res))\n      .catch(e => console.error(e));\n    }\n  \n    login(email, password) {\n      return fetch(`${this._baseUrl}/signin`, {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify({ email, password }),\n      }).then((res) => this._addResult(res));\n    }\n  \n    logout() {\n      return fetch(`${this._baseUrl}/signout`, {\n        method: \"POST\",\n        headers: this._headers,\n      }).then((res) => this._addResult(res));\n    }\n  \n    getSavedMovies(jwt) {\n      return fetch(`${this._baseUrl}/movies`, {\n        headers: {\n          \"content-type\": \"application/json\",\n          Authorization: `Bearer ${jwt}`,\n        },\n      }).then((res) => this._addResult(res));\n    }\n  \n    postMovie(movie, jwt) {\n      return fetch(`${this._baseUrl}/movies`, {\n        method: \"POST\",\n        headers: {\n          \"content-type\": \"application/json\",\n          Authorization: `Bearer ${jwt}`,\n        },\n        body: JSON.stringify({\n          country: movie.country,\n          director: movie.director,\n          duration: movie.duration,\n          year: movie.year,\n          description: movie.description,\n          image: `https://api.nomoreparties.co${movie.image.url}`,\n          trailer: movie.trailerLink,\n          movieId: movie.id.toString(),\n          nameRU: movie.nameRU,\n          nameEN: movie.nameEN,\n          thumbnail: `https://api.nomoreparties.co${movie.image.url}`,\n        }),\n      }).then((res) => this._addResult(res));\n    }\n  \n    removeMovie(movieId, jwt) {\n      return fetch(`${this._baseUrl}/movies/${movieId}`, {\n        method: \"DELETE\",\n        headers: {\n          \"content-type\": \"application/json\",\n          Authorization: `Bearer ${jwt}`,\n        },\n      }).then((res) => this._addResult(res));\n    }\n  \n    errorHandler(err) {\n      console.log(err);\n    }\n  \n    _addResult(res) {\n      console.log('res', res);\n      if (res.ok) {\n        return res.json();\n      }\n      return Promise.reject(`Ошибка: ${res.status}`);\n    }\n  }\n  \n  const mainApi = new Api({\n    // baseUrl: \"https://api.movies-ivlev.nomoredomains.club\",\n    baseUrl: \"http://localhost:3000\",\n    // baseUrl: \"https://api.deploy-diploma.nomoreparties.co/\",\n    headers: {\n      \"Content-Type\": \"application/json\",\n      Authorization: `Bearer ${localStorage.getItem(\"jwt\")}`,\n    },\n  });\n  \n  export default mainApi;"],"mappings":"AAAA,MAAMA,GAAG,CAAC;EACNC,WAAWA,CAAC;IAAEC,OAAO;IAAEC;EAAQ,CAAC,EAAE;IAChC,IAAI,CAACC,QAAQ,GAAGF,OAAO;IACvB,IAAI,CAACG,QAAQ,GAAGF,OAAO;EACzB;EAEAG,OAAOA,CAACC,GAAG,EAAE;IACX,OAAOC,KAAK,CAAE,GAAE,IAAI,CAACJ,QAAS,WAAU,EAAE;MACxCK,MAAM,EAAE,KAAK;MACbN,OAAO,EAAE;QACP,cAAc,EAAE,kBAAkB;QAClCO,aAAa,EAAG,UAASH,GAAI;MAC/B;IACF,CAAC,CAAC,CAACI,IAAI,CAAEC,GAAG,IAAK,IAAI,CAACC,UAAU,CAACD,GAAG,CAAC,CAAC;EACxC;EAEAE,OAAOA,CAACC,IAAI,EAAEC,KAAK,EAAET,GAAG,EAAE;IACxB,OAAOC,KAAK,CAAE,GAAE,IAAI,CAACJ,QAAS,WAAU,EAAE;MACxCK,MAAM,EAAE,OAAO;MACfN,OAAO,EAAE;QACP,cAAc,EAAE,kBAAkB;QAClCO,aAAa,EAAG,UAASH,GAAI;MAC/B,CAAC;MACDU,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;QACnBJ,IAAI;QACJC;MACF,CAAC;IACH,CAAC,CAAC,CAACL,IAAI,CAAEC,GAAG,IAAK,IAAI,CAACC,UAAU,CAACD,GAAG,CAAC,CAAC;EACxC;EAEAQ,QAAQA,CAACL,IAAI,EAAEC,KAAK,EAAEK,QAAQ,EAAE;IAC9B,OAAOb,KAAK,CAAE,GAAE,IAAI,CAACJ,QAAS,SAAQ,EAAE;MACtCK,MAAM,EAAE,MAAM;MACdN,OAAO,EAAE;QACP,cAAc,EAAE;MAClB,CAAC;MACDc,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;QACnBJ,IAAI;QACJC,KAAK;QACLK;MACF,CAAC;IACH,CAAC,CAAC,CAACV,IAAI,CAAEC,GAAG,IAAK,IAAI,CAACC,UAAU,CAACD,GAAG,CAAC,CAAC,CACrCU,KAAK,CAACC,CAAC,IAAIC,OAAO,CAACC,KAAK,CAACF,CAAC,CAAC,CAAC;EAC/B;EAEAG,KAAKA,CAACV,KAAK,EAAEK,QAAQ,EAAE;IACrB,OAAOb,KAAK,CAAE,GAAE,IAAI,CAACJ,QAAS,SAAQ,EAAE;MACtCK,MAAM,EAAE,MAAM;MACdN,OAAO,EAAE;QACP,cAAc,EAAE;MAClB,CAAC;MACDc,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;QAAEH,KAAK;QAAEK;MAAS,CAAC;IAC1C,CAAC,CAAC,CAACV,IAAI,CAAEC,GAAG,IAAK,IAAI,CAACC,UAAU,CAACD,GAAG,CAAC,CAAC;EACxC;EAEAe,MAAMA,CAAA,EAAG;IACP,OAAOnB,KAAK,CAAE,GAAE,IAAI,CAACJ,QAAS,UAAS,EAAE;MACvCK,MAAM,EAAE,MAAM;MACdN,OAAO,EAAE,IAAI,CAACE;IAChB,CAAC,CAAC,CAACM,IAAI,CAAEC,GAAG,IAAK,IAAI,CAACC,UAAU,CAACD,GAAG,CAAC,CAAC;EACxC;EAEAgB,cAAcA,CAACrB,GAAG,EAAE;IAClB,OAAOC,KAAK,CAAE,GAAE,IAAI,CAACJ,QAAS,SAAQ,EAAE;MACtCD,OAAO,EAAE;QACP,cAAc,EAAE,kBAAkB;QAClCO,aAAa,EAAG,UAASH,GAAI;MAC/B;IACF,CAAC,CAAC,CAACI,IAAI,CAAEC,GAAG,IAAK,IAAI,CAACC,UAAU,CAACD,GAAG,CAAC,CAAC;EACxC;EAEAiB,SAASA,CAACC,KAAK,EAAEvB,GAAG,EAAE;IACpB,OAAOC,KAAK,CAAE,GAAE,IAAI,CAACJ,QAAS,SAAQ,EAAE;MACtCK,MAAM,EAAE,MAAM;MACdN,OAAO,EAAE;QACP,cAAc,EAAE,kBAAkB;QAClCO,aAAa,EAAG,UAASH,GAAI;MAC/B,CAAC;MACDU,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;QACnBY,OAAO,EAAED,KAAK,CAACC,OAAO;QACtBC,QAAQ,EAAEF,KAAK,CAACE,QAAQ;QACxBC,QAAQ,EAAEH,KAAK,CAACG,QAAQ;QACxBC,IAAI,EAAEJ,KAAK,CAACI,IAAI;QAChBC,WAAW,EAAEL,KAAK,CAACK,WAAW;QAC9BC,KAAK,EAAG,+BAA8BN,KAAK,CAACM,KAAK,CAACC,GAAI,EAAC;QACvDC,OAAO,EAAER,KAAK,CAACS,WAAW;QAC1BC,OAAO,EAAEV,KAAK,CAACW,EAAE,CAACC,QAAQ,CAAC,CAAC;QAC5BC,MAAM,EAAEb,KAAK,CAACa,MAAM;QACpBC,MAAM,EAAEd,KAAK,CAACc,MAAM;QACpBC,SAAS,EAAG,+BAA8Bf,KAAK,CAACM,KAAK,CAACC,GAAI;MAC5D,CAAC;IACH,CAAC,CAAC,CAAC1B,IAAI,CAAEC,GAAG,IAAK,IAAI,CAACC,UAAU,CAACD,GAAG,CAAC,CAAC;EACxC;EAEAkC,WAAWA,CAACN,OAAO,EAAEjC,GAAG,EAAE;IACxB,OAAOC,KAAK,CAAE,GAAE,IAAI,CAACJ,QAAS,WAAUoC,OAAQ,EAAC,EAAE;MACjD/B,MAAM,EAAE,QAAQ;MAChBN,OAAO,EAAE;QACP,cAAc,EAAE,kBAAkB;QAClCO,aAAa,EAAG,UAASH,GAAI;MAC/B;IACF,CAAC,CAAC,CAACI,IAAI,CAAEC,GAAG,IAAK,IAAI,CAACC,UAAU,CAACD,GAAG,CAAC,CAAC;EACxC;EAEAmC,YAAYA,CAACC,GAAG,EAAE;IAChBxB,OAAO,CAACyB,GAAG,CAACD,GAAG,CAAC;EAClB;EAEAnC,UAAUA,CAACD,GAAG,EAAE;IACdY,OAAO,CAACyB,GAAG,CAAC,KAAK,EAAErC,GAAG,CAAC;IACvB,IAAIA,GAAG,CAACsC,EAAE,EAAE;MACV,OAAOtC,GAAG,CAACuC,IAAI,CAAC,CAAC;IACnB;IACA,OAAOC,OAAO,CAACC,MAAM,CAAE,WAAUzC,GAAG,CAAC0C,MAAO,EAAC,CAAC;EAChD;AACF;AAEA,MAAMC,OAAO,GAAG,IAAIvD,GAAG,CAAC;EACtB;EACAE,OAAO,EAAE,uBAAuB;EAChC;EACAC,OAAO,EAAE;IACP,cAAc,EAAE,kBAAkB;IAClCO,aAAa,EAAG,UAAS8C,YAAY,CAACC,OAAO,CAAC,KAAK,CAAE;EACvD;AACF,CAAC,CAAC;AAEF,eAAeF,OAAO"},"metadata":{},"sourceType":"module","externalDependencies":[]}